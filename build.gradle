plugins {
	id 'java'
	id 'org.ajoberstar.grgit' version '3.0.0'
}

archivesBaseName = 'Tectonicus'
version = '2.26.01'
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets.main.java.srcDirs = ['Source']
sourceSets.main.resources.srcDirs = ['Data']

compileJava {
	options.debug = false
}

repositories {
	jcenter()
}

ext {
	lombokVersion = '1.18.6'
}

dependencies {
	implementation('org.lwjgl.lwjgl:lwjgl_util:2.9.3@jar',
				   'org.apache.commons:commons-lang3:3.5@jar',
				   'com.google.code.gson:gson:2.8.0@jar',
				   'org.joml:joml:1.9.3',
				   'xyz.nickr:nbt:1.1.1')
	implementation('org.lwjgl.lwjgl:lwjgl:2.9.3') {
					exclude module: 'jinput'
	}
	implementation files ('Libs/Jars/jnbt.jar', 'Libs/Jars/jpct.jar', 'Libs/Jars/ProcessingCore.jar', 'Libs/Jars/BiomeExtractor.jar')

	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
	
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.2',
					   'org.hamcrest:hamcrest:2.1')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

jar {
	doFirst {
		def props = new Properties()
		props.setProperty('buildDate', new Date().format('MMMM dd yyyy'))
		props.setProperty('buildTime', new Date().format('hhmm'))
		props.setProperty('buildNumber', grgit.log().size().toString())
		props.setProperty('version', "${version}")
		def writer = new FileWriter(file('build/tectonicus.buildInfo'))
		props.store(writer, 'Tectonicus build info')
		writer.flush()
		writer.close()
	}
	
	from files('build/tectonicus.buildinfo')
	from configurations.runtimeClasspath.asFileTree.files.collect { zipTree(it) }
	from fileTree('Data')
	exclude ('OpenAL*.dll', 'openal.dylib', 'libopenal*.so', 'processing/**')

	manifest {
		attributes 'Main-Class': 'tectonicus.TectonicusApp'
	}
}

task createPackage(type: Zip, dependsOn: 'build', group: 'build', description: 'Create release zip file') {
	from files('Data/defaultBlockConfig.xml', "build/libs/tectonicus-${version}.jar")
	from('Docs') {
		include('*.xml', '*.txt')
	}
}

test {
    useJUnitPlatform()
}
