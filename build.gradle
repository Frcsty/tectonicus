plugins {
	id 'application'
	id 'org.ajoberstar.grgit' version '4.0.1'
	id 'com.github.johnrengelman.shadow' version '5.2.0'
}

archivesBaseName = 'Tectonicus'
project.version = '2.26.03'
sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "tectonicus.TectonicusApp"

sourceSets.main.java.srcDirs = ['Source']
sourceSets.main.resources.srcDirs = ['Data']

compileJava {
	options.debug = false
}

repositories {
	jcenter()
}

ext {
	lwjglVersion = '3.2.3'
	lombokVersion = '1.18.12'
	junitVersion = '5.6.0'
}

dependencies {
	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	implementation("org.lwjgl:lwjgl",
				   "org.lwjgl:lwjgl-opengl",
				   "org.lwjgl:lwjgl-glfw",
				   'org.apache.commons:commons-text:1.8',
				   'com.google.code.gson:gson:2.8.6@jar',
				   'org.joml:joml:1.9.20',
				   'xyz.nickr:nbt:1.1.1',
				   'info.picocli:picocli:3.9.5@jar',
				   "org.jogamp.jogl:jogl-all:2.3.2")
	implementation files ('Libs/Jars/jnbt.jar', 'Libs/Jars/jpct.jar', 'Libs/Jars/ProcessingCore.jar', 'Libs/Jars/BiomeExtractor.jar')
	runtimeOnly("org.lwjgl:lwjgl::natives-windows",
				"org.lwjgl:lwjgl-glfw::natives-windows",
				"org.lwjgl:lwjgl-opengl::natives-windows",
				"org.lwjgl:lwjgl::natives-macos",
				"org.lwjgl:lwjgl-glfw::natives-macos",
				"org.lwjgl:lwjgl-opengl::natives-macos",
				"org.lwjgl:lwjgl::natives-linux",
				"org.lwjgl:lwjgl-glfw::natives-linux",
				"org.lwjgl:lwjgl-opengl::natives-linux")

	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
	
	testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion",
					   'org.hamcrest:hamcrest:2.2')
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

shadowJar {
	doFirst {
		def props = new Properties()
		props.setProperty('buildDate', new Date().format('MMMM dd yyyy'))
		props.setProperty('buildTime', new Date().format('hhmm'))
		props.setProperty('buildNumber', grgit.log().size().toString())
		props.setProperty('version', "${project.version}")
		def writer = new FileWriter(file('build/resources/main/tectonicus.buildInfo'))
		props.store(writer, 'Tectonicus build info')
		writer.flush()
		writer.close()
	}

	archiveClassifier = ''

	exclude ('processing/**', 'com/threed/**')
	minimize {
		exclude(dependency('xyz.nickr:nbt:.*'))
	}
}

distributions {
	shadow {
		distributionBaseName = archivesBaseName
		contents {
			from files('Data/defaultBlockConfig.xml')
			from('Docs') {
				include('*.xml', '*.txt')
			}
		}
	}
}

test {
    useJUnitPlatform()
}
